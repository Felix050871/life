Obiettivo: Eseguire un controllo completo dell‚Äôintera applicazione Flask per identificare ed eliminare ridondanze, codice morto, valori hardcoded, migliorando l‚Äôorganizzazione senza compromettere alcuna funzionalit√† esistente.

üì¶ Analisi strutturale del progetto

Controlla tutte le cartelle e file del progetto Flask:

/app, /templates, /static, /config, /instance, /tests, ecc.

Mappa i moduli importati, le route, i blueprint, le funzioni e le dipendenze reali.

üßπ Pulizia e riorganizzazione
Effettua un'analisi accurata e:

Rimuovi con prudenza:

Funzioni, file Python, template HTML e asset statici non utilizzati.

Variabili e costanti dichiarate ma mai usate.

Duplicazioni di codice (es. view identiche, funzioni ripetute).

Valori hardcoded (es. stringhe, URL, parametri) che dovrebbero stare in config o .env.

Segnala ma NON cancellare se:

Il codice potrebbe essere chiamato dinamicamente.

Il file √® sospetto ma non hai certezza del suo disuso.

Mantieni l‚Äôintegrit√† delle route:

Verifica che tutte le route registrate siano effettivamente attive e raggiungibili.

Rimuovi route morte o duplicate, ma solo se sicuro.

‚öôÔ∏è Ottimizzazione del codice

Migliora la leggibilit√† e la manutenibilit√†:

Rinomina variabili e funzioni in modo coerente e descrittivo.

Uniforma formattazione, indentazione e commenti.

Sposta config e segreti in .env o file dedicati (senza esporli).

Riduci la logica nelle view: sposta codice ripetuto in helper o service.

üß™ Verifica delle funzionalit√†

Esegui un check post-pulizia:

L‚Äôapp deve funzionare esattamente come prima.

Tutte le route devono rispondere correttamente.

Se esistono test automatici: eseguili e assicurati che passino.

Se non ci sono test: verifica manualmente almeno i flussi principali.

üìÑ Report finale
Genera un file CLEANUP_REPORT.md con:

Elenco puntuale delle modifiche effettuate.

File rimossi e motivazione.

Suggerimenti per miglioramenti futuri (es. modularizzazione, logging, test).

‚ö†Ô∏è IMPORTANTE:
Non eliminare nulla che non sia chiaramente non utilizzato.
In caso di dubbio, commenta e segnala nel report.

